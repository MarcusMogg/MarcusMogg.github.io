(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{543:function(t,a,s){"use strict";s.r(a);var r=s(6),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("学习MIT6.824，先看三篇经典paper")]),t._v(" "),s("p",[t._v("英语太烂了，不得不先翻译一遍……")]),t._v(" "),s("h2",{attrs:{id:"摘要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#摘要"}},[t._v("#")]),t._v(" 摘要")]),t._v(" "),s("p",[s("code",[t._v("MapReduce")]),t._v("是一种用于处理、生成大数据集的编程模型和相关实现。 用户指定一个"),s("code",[t._v("Map")]),t._v("函数将一个键值对生成为一组中间键值对集合，一个"),s("code",[t._v("Reduce")]),t._v("函数合并所有具有相同中间key的中间值。如paper中所示，这个模型可以表示显示世界中的许多任务。")]),t._v(" "),s("p",[t._v("以这种方式编写的程序自然地支持并行和在大规模的商用集群上运行。运行时系统负责划分输入数据、在集群上的调度、处理机器故障、管理集群内部的通信。这使得没有任何并发处理和分布式经验的程序员可以轻松的利用大规模分布式系统的资源。")]),t._v(" "),s("p",[t._v("我们MapReduce的实现运行在一个大规模的商用服务器集群上，而且可以灵活的伸缩。一个典型的MapReduce计算处理几千台机器上许多TB的数据。程序员可以发现系统使用非常简单。在谷歌的集群上，每天都有几百个MapReduce程序、一千多个个MapReduce任务执行。")]),t._v(" "),s("h2",{attrs:{id:"_1-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("#")]),t._v(" 1 简介")]),t._v(" "),s("p",[t._v("在过去的五年里，作者和谷歌的许多员工已经实现了成百上千个特殊目的程序，用于将大量的原始数据（比如抓取的文挡、网络请求log）处理为各种衍生数据（比如倒排索引，网络文档的图结构的各种表示，每台主机爬取到的页数摘要，某一天里最频繁的请求等）。许多计算从概念上讲是很简单的。但是，输入数据是非常庞大的，计算需要分布到成百上千台机器上，这样才能在一个合理的时间内获取到结果。如何并行化计算，划分数据，处理异常这些问题通常需要大量复杂的代码去解决，使得原本简单的计算变的复杂。")]),t._v(" "),s("p",[t._v("为了解决复杂性，我们设计了一个抽象模型，使得我们可以表示需要的简单的计算，并且将并行、容错、数据划分、复杂均衡这些细节隐藏到一个库里。我们的抽象模型灵感来源于Lisp等函数式编程语言的"),s("code",[t._v("map、reduce")]),t._v("表示。我们认识到，许多计算过程都在输入中的逻辑记录上使用了map操作以处理为中间键值对，然后在所有具有相同key的value上使用reduce操作以合适地合并导出数据。函数模型的使用,再结合用户指定的map和reduce操作,让我们可以非常容易的实现大规模并行化计算,和使用再次执行作为初级机制来实现容错。")]),t._v(" "),s("p",[t._v("这份工作的主要贡献是一个简单、有效的接口可以自动并行化和分配大规模计算，结合这个接口的实现来在大量普通的PC机上实现高性能计算。")]),t._v(" "),s("p",[t._v("第二节描述了基本的编程模型并给出了一些例子。第三节介绍了我们基于集群环境的 Mapreduce 接口实现。第四节介绍了编程模型的一些技巧。第五节对我们执行各种任务的性能进行了度量。第六节介绍了MapReduce在谷歌内部的使用，包括我们以此为基础重写产品索引系统的经验。第七节是一些相关讨论和未来的工作。")]),t._v(" "),s("h2",{attrs:{id:"_2-编程模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-编程模型"}},[t._v("#")]),t._v(" 2 编程模型")]),t._v(" "),s("p",[t._v("计算利用一个输入键值对集合，产出一个输出键值对结合。MapReduce库的用户将计算表示为两个函数 "),s("code",[t._v("Map")]),t._v("和"),s("code",[t._v("Reduce")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("Map")]),t._v("，由用户编写，将一个键值对生成为一组中间键值对集合。MapReduce库将所有具有相同关键词"),s("code",[t._v("I")]),t._v("的中间value进行分组，然后传递给Reduce函数。")]),t._v(" "),s("p",[s("code",[t._v("Reduce")]),t._v("函数，同样由用户编写，接受一个中间key "),s("code",[t._v("I")]),t._v("和该key相关 的一组value。它将这些值合并到一起，形成一个可能更小的value集合。通常一个Reduce调用只产生一个或者零个输出。通过一个迭代器把中间value提供给用户自定义的reduce函数。这使得我们可以处理太大以至于内存放不下的value列表。")]),t._v(" "),s("h3",{attrs:{id:"_2-1-example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-example"}},[t._v("#")]),t._v(" 2.1 Example")]),t._v(" "),s("p",[t._v("考虑这样一个问题，计算一个大规模文档集合中每个单词的数目。用户将编写和下面伪代码类似的程序")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" String value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key: document name")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// value: document contents")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each word w in value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EmitIntermediate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Iterator value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key: a word")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// value: a list of counts")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each v in value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\tresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ParseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AsString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("p",[s("code",[t._v("map")]),t._v("函数会发出每个单词以及相关的出现次数。"),s("code",[t._v("reduce")]),t._v("函数对一个特定单词发出的次数进行求和。")]),t._v(" "),s("p",[t._v("除此之外，用户需要编码用输入输出文件的名字和可选的调节参数来填充一个mapreduce规范（"),s("code",[t._v("mapreduce specification")]),t._v("）对象。用户之后调用MapReduce函数，传递给它规范对象。用户的代码需要和MapReduce库（C++实现）链接。附录A包含这个例子的完整代码。")]),t._v(" "),s("h3",{attrs:{id:"_2-2-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-types"}},[t._v("#")]),t._v(" 2.2 Types")]),t._v(" "),s("p",[t._v("尽管之前的伪代码使用的是字符串输入和输出，但是从概念上讲，用户提供的map和reduce函数具有相关的类型")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("输入的键值对和输出的键值对来自不同的域。但是中间键值对和输出键值对来自相同的域。")]),t._v(" "),s("p",[t._v("我们的C++实现在用户实现的函数之间传递字符串，并且用户可以自行编写代码将字符串转换为适当的类型。")]),t._v(" "),s("h3",{attrs:{id:"_2-3-more-examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-more-examples"}},[t._v("#")]),t._v(" 2.3 More Examples")]),t._v(" "),s("p",[t._v("下面有一些有趣的程序，可以很轻松的使用MapReduce计算表示。")]),t._v(" "),s("ul",[s("li",[t._v("分布式Grep：map函数发送满足特定模式的行。reduce函数仅将中间数据输出。")]),t._v(" "),s("li",[t._v("统计URL访问频率：map函数处理web页面请求的日志信息，发送"),s("code",[t._v("<URL,1>")]),t._v("。reduce函数将同一个URL的次数加到一起，并发送"),s("code",[t._v("<URL,total cnt>")])]),t._v(" "),s("li",[t._v("反转网络链接图：map函数对"),s("code",[t._v("source")]),t._v("页面中的所有"),s("code",[t._v("target")]),t._v("连接输出"),s("code",[t._v("<target,source>")]),t._v("。reduce函数将指定URL相关的tsource URL放到一个列表里，返回"),s("code",[t._v("<URL,list(source)>")])]),t._v(" "),s("li",[t._v("分布式排序：map函数从record中提取key，然后发送"),s("code",[t._v("<key ,record>")]),t._v("。reduce函数不改变键值对。这个计算依赖于4.1中介绍的划分设备(partitioning facilities  )和4.2中介绍的排序(ordering  )属性")])]),t._v(" "),s("h2",{attrs:{id:"_3-实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-实现"}},[t._v("#")]),t._v(" 3 实现")]),t._v(" "),s("p",[t._v("可能会有很多种不同的MapReduce实现。正确的选择取决于环境。例如，一种实现适合于小共享内存的机器，另一种实现适合于大NUMA 多处理器，还有一种适合更大的网络机器集群。")]),t._v(" "),s("p",[t._v("这一节介绍一种实现适合于谷歌内部广泛应用的环境，使用交换机连接的大规模商用计算机集群。在我们的环境里：")]),t._v(" "),s("ul",[s("li",[t._v("(1) 机器通常是x86双处理器，运行Linux，内存2-4GB")]),t._v(" "),s("li",[t._v("(2) 商用网络硬件，通常100mb/s 或者 1gb/s,但是平均小于全部带宽的一半。")]),t._v(" "),s("li",[t._v("(3) 一个集群通常有成百上千台机器，所以机器故障是很常见的。")]),t._v(" "),s("li",[t._v("(4) 通过直接连接到单个计算机的廉价IDE磁盘提供存储。 内部开发的分布式文件系统用于管理存储在这些磁盘上的数据。 文件系统使用复制在不可靠的硬件上提供可用性和可靠性。")]),t._v(" "),s("li",[t._v("(5) 用户将作业提交到调度系统。 每个作业包含一组任务，并由调度程序映射到集群中的一组可用计算机")])]),t._v(" "),s("h3",{attrs:{id:"_3-1-execution-overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-execution-overview"}},[t._v("#")]),t._v(" 3.1 Execution Overview")]),t._v(" "),s("p",[t._v("通过自动划分输入数据到M个split的集合，Map调用可以分布到多态机器上。输入split可以在不同的机器上并行处理。reduce调用实现分布式是通过一个分割函数将中间key分割为R份（例如"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"18.976ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 8387.3 1000","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-5-TEX-I-210E",d:"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"}}),s("path",{attrs:{id:"MJX-5-TEX-I-1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"}}),s("path",{attrs:{id:"MJX-5-TEX-I-1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"}}),s("path",{attrs:{id:"MJX-5-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}}),s("path",{attrs:{id:"MJX-5-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}}),s("path",{attrs:{id:"MJX-5-TEX-I-1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"}}),s("path",{attrs:{id:"MJX-5-TEX-I-1D466",d:"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"}}),s("path",{attrs:{id:"MJX-5-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}}),s("path",{attrs:{id:"MJX-5-TEX-N-6D",d:"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"}}),s("path",{attrs:{id:"MJX-5-TEX-N-6F",d:"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"}}),s("path",{attrs:{id:"MJX-5-TEX-N-64",d:"M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z"}}),s("path",{attrs:{id:"MJX-5-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"210E","xlink:href":"#MJX-5-TEX-I-210E"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(576,0)"}},[s("use",{attrs:{"data-c":"1D44E","xlink:href":"#MJX-5-TEX-I-1D44E"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(1105,0)"}},[s("use",{attrs:{"data-c":"1D460","xlink:href":"#MJX-5-TEX-I-1D460"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(1574,0)"}},[s("use",{attrs:{"data-c":"210E","xlink:href":"#MJX-5-TEX-I-210E"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(2150,0)"}},[s("use",{attrs:{"data-c":"28","xlink:href":"#MJX-5-TEX-N-28"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(2539,0)"}},[s("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-5-TEX-I-1D458"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(3060,0)"}},[s("use",{attrs:{"data-c":"1D452","xlink:href":"#MJX-5-TEX-I-1D452"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(3526,0)"}},[s("use",{attrs:{"data-c":"1D466","xlink:href":"#MJX-5-TEX-I-1D466"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(4016,0)"}},[s("use",{attrs:{"data-c":"29","xlink:href":"#MJX-5-TEX-N-29"}})]),s("g",{attrs:{"data-mml-node":"mspace",transform:"translate(4405,0)"}}),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(5238.7,0)"}},[s("use",{attrs:{"data-c":"6D","xlink:href":"#MJX-5-TEX-N-6D"}}),s("use",{attrs:{"data-c":"6F","xlink:href":"#MJX-5-TEX-N-6F",transform:"translate(833,0)"}}),s("use",{attrs:{"data-c":"64","xlink:href":"#MJX-5-TEX-N-64",transform:"translate(1333,0)"}})]),s("g",{attrs:{"data-mml-node":"mstyle",transform:"translate(7127.7,0)"}},[s("g",{attrs:{"data-mml-node":"mspace"}})]),s("g",{attrs:{"data-mml-node":"mstyle",transform:"translate(7294.7,0)"}},[s("g",{attrs:{"data-mml-node":"mspace"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(7628.3,0)"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-5-TEX-I-1D445"}})])])])])]),t._v("）。分割的总数和分割函数由用户指定。")],1),t._v(" "),s("p",[t._v("图一展示了我们的MapReduce实现的整体流程。当用户程序调用MapReduce函数时，会发生下面一系列操作(图1上的数字标签和下面的对应)")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s1.ax1x.com/2020/08/18/duyRFf.png",alt:"图一"}})]),t._v(" "),s("ol",[s("li",[t._v("用户程序中的MapReduce库首先会将输入数据划分为M份，通常每份是16M到64M，用户可以通过参数来设置。然后在集群里启动程序的复制。")]),t._v(" "),s("li",[t._v("有一个程序的复制是特殊的——"),s("code",[t._v("master")]),t._v("。余下节点的工作是由这个节点分配的。一共M个map任务和R个reduce任务需要分配。maste挑选空闲的worker，然后分配给它一共map任务或者一个reduce任务。")]),t._v(" "),s("li",[t._v("一个被分配了map任务的worker会读取相应划分的输入数据。它会将输入数据解析为键值对，然后传递给用户定义的map函数。map函数生成中间键值对，并缓存到内存里。")]),t._v(" "),s("li",[t._v("内存里的键值对会周期性的写入本地磁盘，并有分割函数划分为R个区域。本地磁盘上写入的键值对位置会被传回给master，然后master传递给reduce worker。")]),t._v(" "),s("li",[t._v("当一个reduce worker被master通知键值对位置，它会使用远程调用去读取远程磁盘上的由map生成的数据。当一个reduce worker读取了所有的中间数据，它会将所有的中间数据按照key进行排序，这样具有相同key的数据可以分组到一起。排序是必要的，因为通常会有许多不同的key映射到一个reduce任务上。如果中间数据的数量太大，需要使用外排序。")]),t._v(" "),s("li",[t._v("reduce worker遍历排好序的中间数据，然后对于每一个key，会将对应的key和value集合传递给用户的reduce函数。reduce函数的输出会添加到当前reduce划分的最终输出文件")]),t._v(" "),s("li",[t._v("当所有的map和reduce任务完成，master会唤醒用户程序。这时，用户程序里的"),s("code",[t._v("Mapreduce")]),t._v("调用会返回需要的结果。")])]),t._v(" "),s("p",[t._v("当成功完成后，MapReduce的输出会放在R个输出文件里。通常用户并不需要将这个R个文件合并为一个文件，他们可以将这些文件作为另一个MapReduce调用的输入，或者是使用其他可以处理多文件输入的分布式应用。")]),t._v(" "),s("h3",{attrs:{id:"_3-2-master-data-structures"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-master-data-structures"}},[t._v("#")]),t._v(" 3.2 Master Data Structures")]),t._v(" "),s("p",[t._v("master保持一些数据结构。对每一个map任务和reduce任务，它存储state（idle、in-processing,completed）,和工作机器标识。")]),t._v(" "),s("p",[t._v("master是map任务和reduce任务之间传递的中间文件的导管。因此，对每一个完成的map任务，master存储map产生的R个中间文件的位置和大小。当map任务完成时需要更新这些信息。这些信息会逐步推送到 in-process状态的reduce任务的worker上。")]),t._v(" "),s("h3",{attrs:{id:"_3-3-fault-tolerance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-fault-tolerance"}},[t._v("#")]),t._v(" 3.3 Fault Tolerance")]),t._v(" "),s("p",[t._v("MapReduce库的目的是在成千上万台机器上处理大量数据，因此必须优雅的处理机器错误。")]),t._v(" "),s("h4",{attrs:{id:"worker-failure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#worker-failure"}},[t._v("#")]),t._v(" worker Failure")]),t._v(" "),s("p",[t._v("master会周期性的ping每一个worker。如果在指定时间内没有收到worker的回复，master会将这个worker标记为failed 。每一个worker完成的map任务都会被重设为初始的idle状态，因此它可以被安排给其他worker。同样的，如果一个map或者reduce任务失败，它也会被设置为idle状态，然后被重新调度。")]),t._v(" "),s("p",[t._v("在一个失败机器上完成的map任务需要重新执行，因为它的输出存储在失败机器的本地硬盘上，是无法访问的。在一个失败机器上完成的reduce任务需要重新执行，因为它的输出存储在全局文件系统。")]),t._v(" "),s("p",[t._v("当一个map任务首先在worker A上执行然后在workerB上执行（因为A失败了），所有的的reduce worker会被通知重新执行。每个还没在worker A上读取数据的reduce任务会到worker B上读取。")]),t._v(" "),s("p",[t._v("MapReduce对大规模的worker失败是有弹性的。比如，执行一个MapReduce操作时，一个集群的网络维护会导致80台机器在一段时间内无法访问。MapReduce master只需要简单地重新执行一下由那些失败worker执行的任务，然后继续处理，知道完成MapReduce操作。")]),t._v(" "),s("h4",{attrs:{id:"master-failure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#master-failure"}},[t._v("#")]),t._v(" Master Failure")]),t._v(" "),s("p",[t._v("很容易做到周期性地将上述master的数据结构存储到检查点。如果master任务失败，一份拷贝会从最近的检查点重新开始。然而，考虑到只有一个master节点，失败是不太可能的。因此我们最近的实现，在master失败的时候会终止MapReduce程序。客户端可以检查这个条件，或者重新尝试MapReduce操作。")]),t._v(" "),s("h4",{attrs:{id:"semantics-in-the-presence-of-failures"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#semantics-in-the-presence-of-failures"}},[t._v("#")]),t._v(" Semantics in the Presence of Failures")]),t._v(" "),s("p",[t._v("当用户提供的map和reduce函数有着确定的输出时，我们的分布式执行结果会和整个程序无错误执行的输出相同。")]),t._v(" "),s("p",[t._v("我们这个属性的实现依赖于map和reduce任务输出的原子性提交。每一个执行中的任务会将其输出写入到私有存储文件中。一个reduce任务产生一个文件，一个map任务产生m个文件。当一个map任务完成时，worker会发送一个消息到master，这个消息里包含R个临时文件的name。如果master接收到一个一个已经完成的map任务的信息，将忽略这条信息。相反的，master将记录着R个文件的name。")]),t._v(" "),s("p",[t._v("当一个reduce任务完成时，reduce worker将原子地将临时文件重命名为最终输出文件。如果同一个reduce任务在许多机器上运行，重命名调用将调用多次。我们依赖于基础文件系统提供的原子重命名操作来保证最终文件系统状态仅包含一个reduce任务产生的数据。")]),t._v(" "),s("p",[t._v("我们的大部分map和reduce操作是确定性的，事实上我们的语义等价于一系列串行化操作，来使得程序员可以轻松地思考程序的表现。当map和reduce操作是不确定的，我们提供了较弱但是仍然合理的语义。在不确定操作的情况下，某一特定reduce任务"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.339ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"2.705ex",height:"1.885ex",role:"img",focusable:"false",viewBox:"0 -683 1195.6 833","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-6-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}}),s("path",{attrs:{id:"MJX-6-TEX-N-31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"msub"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-6-TEX-I-1D445"}})]),s("g",{attrs:{"data-mml-node":"mn",transform:"translate(792,-150) scale(0.707)"}},[s("use",{attrs:{"data-c":"31","xlink:href":"#MJX-6-TEX-N-31"}})])])])])])]),t._v("的输出等价于不确定程序的某个串行化操作的输出。然鹅，另一个reduce任务"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.339ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"2.705ex",height:"1.885ex",role:"img",focusable:"false",viewBox:"0 -683 1195.6 833","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-7-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}}),s("path",{attrs:{id:"MJX-7-TEX-N-32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"msub"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-7-TEX-I-1D445"}})]),s("g",{attrs:{"data-mml-node":"mn",transform:"translate(792,-150) scale(0.707)"}},[s("use",{attrs:{"data-c":"32","xlink:href":"#MJX-7-TEX-N-32"}})])])])])])]),t._v("的输出可能由于不确定任务执行顺序的不同而不同。")],1),t._v(" "),s("p",[t._v("考虑map任务M和reduce任务"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.439ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"6.416ex",height:"1.984ex",role:"img",focusable:"false",viewBox:"0 -683 2835.8 877","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-8-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}}),s("path",{attrs:{id:"MJX-8-TEX-N-31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}}),s("path",{attrs:{id:"MJX-8-TEX-N-2C",d:"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"}}),s("path",{attrs:{id:"MJX-8-TEX-N-32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"msub"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-8-TEX-I-1D445"}})]),s("g",{attrs:{"data-mml-node":"mn",transform:"translate(792,-150) scale(0.707)"}},[s("use",{attrs:{"data-c":"31","xlink:href":"#MJX-8-TEX-N-31"}})])]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(1195.6,0)"}},[s("use",{attrs:{"data-c":"2C","xlink:href":"#MJX-8-TEX-N-2C"}})]),s("g",{attrs:{"data-mml-node":"msub",transform:"translate(1640.2,0)"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-8-TEX-I-1D445"}})]),s("g",{attrs:{"data-mml-node":"mn",transform:"translate(792,-150) scale(0.707)"}},[s("use",{attrs:{"data-c":"32","xlink:href":"#MJX-8-TEX-N-32"}})])])])])])]),t._v("的情况。我们设定"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"5.271ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2330 1000","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-9-TEX-I-1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"}}),s("path",{attrs:{id:"MJX-9-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}}),s("path",{attrs:{id:"MJX-9-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}}),s("path",{attrs:{id:"MJX-9-TEX-I-1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"}}),s("path",{attrs:{id:"MJX-9-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D452","xlink:href":"#MJX-9-TEX-I-1D452"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(466,0)"}},[s("use",{attrs:{"data-c":"28","xlink:href":"#MJX-9-TEX-N-28"}})]),s("g",{attrs:{"data-mml-node":"msub",transform:"translate(855,0)"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-9-TEX-I-1D445"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(792,-150) scale(0.707)"}},[s("use",{attrs:{"data-c":"1D456","xlink:href":"#MJX-9-TEX-I-1D456"}})])]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(1941,0)"}},[s("use",{attrs:{"data-c":"29","xlink:href":"#MJX-9-TEX-N-29"}})])])])])]),t._v("为已经提交的"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.357ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"2.457ex",height:"1.902ex",role:"img",focusable:"false",viewBox:"0 -683 1086 840.8","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-10-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}}),s("path",{attrs:{id:"MJX-10-TEX-I-1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"msub"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-10-TEX-I-1D445"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(792,-150) scale(0.707)"}},[s("use",{attrs:{"data-c":"1D456","xlink:href":"#MJX-10-TEX-I-1D456"}})])])])])])]),t._v("的执行(有且仅有一个这样的执行)。这个比较弱的语义出现,因为"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"5.519ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2439.6 1000","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-11-TEX-I-1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"}}),s("path",{attrs:{id:"MJX-11-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}}),s("path",{attrs:{id:"MJX-11-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}}),s("path",{attrs:{id:"MJX-11-TEX-N-31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}}),s("path",{attrs:{id:"MJX-11-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D452","xlink:href":"#MJX-11-TEX-I-1D452"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(466,0)"}},[s("use",{attrs:{"data-c":"28","xlink:href":"#MJX-11-TEX-N-28"}})]),s("g",{attrs:{"data-mml-node":"msub",transform:"translate(855,0)"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-11-TEX-I-1D445"}})]),s("g",{attrs:{"data-mml-node":"mn",transform:"translate(792,-150) scale(0.707)"}},[s("use",{attrs:{"data-c":"31","xlink:href":"#MJX-11-TEX-N-31"}})])]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(2050.6,0)"}},[s("use",{attrs:{"data-c":"29","xlink:href":"#MJX-11-TEX-N-29"}})])])])])]),t._v("也许已经读取了由M的执行产生的输出,而"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"5.519ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2439.6 1000","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-12-TEX-I-1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"}}),s("path",{attrs:{id:"MJX-12-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}}),s("path",{attrs:{id:"MJX-12-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}}),s("path",{attrs:{id:"MJX-12-TEX-N-32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}}),s("path",{attrs:{id:"MJX-12-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D452","xlink:href":"#MJX-12-TEX-I-1D452"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(466,0)"}},[s("use",{attrs:{"data-c":"28","xlink:href":"#MJX-12-TEX-N-28"}})]),s("g",{attrs:{"data-mml-node":"msub",transform:"translate(855,0)"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-12-TEX-I-1D445"}})]),s("g",{attrs:{"data-mml-node":"mn",transform:"translate(792,-150) scale(0.707)"}},[s("use",{attrs:{"data-c":"32","xlink:href":"#MJX-12-TEX-N-32"}})])]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(2050.6,0)"}},[s("use",{attrs:{"data-c":"29","xlink:href":"#MJX-12-TEX-N-29"}})])])])])]),t._v("也许已经读取了由M的不同执行产生的输出.")],1),t._v(" "),s("h3",{attrs:{id:"_3-4-locality"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-locality"}},[t._v("#")]),t._v(" 3.4 Locality")]),t._v(" "),s("p",[t._v("在我们的计算环境中，网络带宽是比较珍贵的资源。我们采用将输入数据（GFS管理）保存到组成集群的机器的本地磁盘上来节省带宽。GFS将每个文件分割为64MB大小的块，然后每个块存储多个拷贝（通常3个）在不同的机器上。MapReduce master将输入文件的位置位置信息考虑在内，并尝试在包含输入数据的副本的机器上进行map任务。如果失败，它将尝试在该任务输入数据的副本附近安排map任务（例如，在与包含数据的计算机位于同一网络交换机的工作计算机上）。 在集群中相当大部分的工作线程上运行大型MapReduce操作时，大多数输入数据都在本地读取，并且不占用网络带宽。")]),t._v(" "),s("h3",{attrs:{id:"_3-5-task-granularity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-task-granularity"}},[t._v("#")]),t._v(" 3.5 Task Granularity")]),t._v(" "),s("p",[t._v("如上所述，我们将map阶段细分为M份，将reduce阶段细分为R份。理想情况下，MR应该比worker机器的数量大的多。每个worker执行许多不同的任务可以改善动态负载平衡，还可以使得失败快速恢复：这个机器上的许多已经完成的map任务可以被分配到所有其他的worker机器上。")]),t._v(" "),s("p",[t._v("在我们的实现中，MR的大小是有范围的，因为master必须做"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"10.347ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 4573.4 1000","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-13-TEX-I-1D442",d:"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"}}),s("path",{attrs:{id:"MJX-13-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}}),s("path",{attrs:{id:"MJX-13-TEX-I-1D440",d:"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"}}),s("path",{attrs:{id:"MJX-13-TEX-N-2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"}}),s("path",{attrs:{id:"MJX-13-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}}),s("path",{attrs:{id:"MJX-13-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D442","xlink:href":"#MJX-13-TEX-I-1D442"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(763,0)"}},[s("use",{attrs:{"data-c":"28","xlink:href":"#MJX-13-TEX-N-28"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(1152,0)"}},[s("use",{attrs:{"data-c":"1D440","xlink:href":"#MJX-13-TEX-I-1D440"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(2425.2,0)"}},[s("use",{attrs:{"data-c":"2B","xlink:href":"#MJX-13-TEX-N-2B"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(3425.4,0)"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-13-TEX-I-1D445"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(4184.4,0)"}},[s("use",{attrs:{"data-c":"29","xlink:href":"#MJX-13-TEX-N-29"}})])])])])]),t._v("次调度，并存储"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"10.347ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 4573.4 1000","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-14-TEX-I-1D442",d:"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"}}),s("path",{attrs:{id:"MJX-14-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}}),s("path",{attrs:{id:"MJX-14-TEX-I-1D440",d:"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"}}),s("path",{attrs:{id:"MJX-14-TEX-N-D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"}}),s("path",{attrs:{id:"MJX-14-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}}),s("path",{attrs:{id:"MJX-14-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D442","xlink:href":"#MJX-14-TEX-I-1D442"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(763,0)"}},[s("use",{attrs:{"data-c":"28","xlink:href":"#MJX-14-TEX-N-28"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(1152,0)"}},[s("use",{attrs:{"data-c":"1D440","xlink:href":"#MJX-14-TEX-I-1D440"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(2425.2,0)"}},[s("use",{attrs:{"data-c":"D7","xlink:href":"#MJX-14-TEX-N-D7"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(3425.4,0)"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-14-TEX-I-1D445"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(4184.4,0)"}},[s("use",{attrs:{"data-c":"29","xlink:href":"#MJX-14-TEX-N-29"}})])])])])]),t._v("个状态在内存中。（内存使用的常数因子是很小的，但是"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"10.347ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 4573.4 1000","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-14-TEX-I-1D442",d:"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"}}),s("path",{attrs:{id:"MJX-14-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}}),s("path",{attrs:{id:"MJX-14-TEX-I-1D440",d:"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"}}),s("path",{attrs:{id:"MJX-14-TEX-N-D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"}}),s("path",{attrs:{id:"MJX-14-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}}),s("path",{attrs:{id:"MJX-14-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"1D442","xlink:href":"#MJX-14-TEX-I-1D442"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(763,0)"}},[s("use",{attrs:{"data-c":"28","xlink:href":"#MJX-14-TEX-N-28"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(1152,0)"}},[s("use",{attrs:{"data-c":"1D440","xlink:href":"#MJX-14-TEX-I-1D440"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(2425.2,0)"}},[s("use",{attrs:{"data-c":"D7","xlink:href":"#MJX-14-TEX-N-D7"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(3425.4,0)"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-14-TEX-I-1D445"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(4184.4,0)"}},[s("use",{attrs:{"data-c":"29","xlink:href":"#MJX-14-TEX-N-29"}})])])])])]),t._v(" 块状态由大约每个 map 任务/reduce 任务对一个字节组成。")],1),t._v(" "),s("p",[t._v("此外，R通常由用户指定，因为每个reduce任务最终会输出多个文件。在实践中，我们倾向于选择M使得每一个任务只需要处理16到64MB的输入数据（这样上述的本地化优化最有效）。R是我们希望使用的机器数量的一个小的倍数。通常对于一个MapReduce任务，我们使用2000台机器，M = 200000，R = 5000")]),t._v(" "),s("h3",{attrs:{id:"_3-6-backup-tasks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-backup-tasks"}},[t._v("#")]),t._v(" 3.6 Backup Tasks")]),t._v(" "),s("p",[t._v('一个常见的导致MapReduce操作总时长过长的原因是"straggler"（落后者）：一台机器完成少量的Map或者Reduce任务但是花费了不正常的很长时间。落后者的出现可能有很多原因。比如，一个磁盘辣鸡的机器经常会遇到correctable errors  ，导致读写性能从30MB/s降到1MB/s。集群调度可能会在这台机器上安排其他任务，这就会导致CPU、磁盘、内存、带宽竞争，使得执行MapReduce代码非常缓慢。我们最近遇到的一个问题是，机器初始化代码中的一个bug导致处理器缓存被禁用，受影响的机器上计算速度下降了一百倍。')]),t._v(" "),s("p",[t._v("我们有一个通用的机制来减轻落后者带来的问题。当一个MapReduce操作接近完成时，master会调度其余正在运行中的任务的备份执行。无论是主任务还是备份任务完成，这个任务都会被标记为完成。我们已经对这个机制进行了调整，通常，计算资源的增加不超过百分之几。我们发现这对减小大型MapReduce操纵的时间是很有意义的。例如，5.3中的排序任务在禁用备份机制的时候，花费的时间会增长44%。")]),t._v(" "),s("h2",{attrs:{id:"_4-技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-技巧"}},[t._v("#")]),t._v(" 4 技巧")]),t._v(" "),s("p",[t._v("尽管对大部分需求来说，编写map和reduce函数提供的基础功能已经是足够的，但我们有一些有用的拓展。这一节将说明。")]),t._v(" "),s("h3",{attrs:{id:"_4-1-partitioning-function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-partitioning-function"}},[t._v("#")]),t._v(" 4.1 Partitioning  Function")]),t._v(" "),s("p",[t._v("用户指定reduce任务的数量R。分割函数基于中间key将数据分割到这些任务上。一个默认的分割函数是使用hash（例如"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"18.976ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 8387.3 1000","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-5-TEX-I-210E",d:"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"}}),s("path",{attrs:{id:"MJX-5-TEX-I-1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"}}),s("path",{attrs:{id:"MJX-5-TEX-I-1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"}}),s("path",{attrs:{id:"MJX-5-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}}),s("path",{attrs:{id:"MJX-5-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}}),s("path",{attrs:{id:"MJX-5-TEX-I-1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"}}),s("path",{attrs:{id:"MJX-5-TEX-I-1D466",d:"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"}}),s("path",{attrs:{id:"MJX-5-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}}),s("path",{attrs:{id:"MJX-5-TEX-N-6D",d:"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"}}),s("path",{attrs:{id:"MJX-5-TEX-N-6F",d:"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"}}),s("path",{attrs:{id:"MJX-5-TEX-N-64",d:"M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z"}}),s("path",{attrs:{id:"MJX-5-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"210E","xlink:href":"#MJX-5-TEX-I-210E"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(576,0)"}},[s("use",{attrs:{"data-c":"1D44E","xlink:href":"#MJX-5-TEX-I-1D44E"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(1105,0)"}},[s("use",{attrs:{"data-c":"1D460","xlink:href":"#MJX-5-TEX-I-1D460"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(1574,0)"}},[s("use",{attrs:{"data-c":"210E","xlink:href":"#MJX-5-TEX-I-210E"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(2150,0)"}},[s("use",{attrs:{"data-c":"28","xlink:href":"#MJX-5-TEX-N-28"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(2539,0)"}},[s("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-5-TEX-I-1D458"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(3060,0)"}},[s("use",{attrs:{"data-c":"1D452","xlink:href":"#MJX-5-TEX-I-1D452"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(3526,0)"}},[s("use",{attrs:{"data-c":"1D466","xlink:href":"#MJX-5-TEX-I-1D466"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(4016,0)"}},[s("use",{attrs:{"data-c":"29","xlink:href":"#MJX-5-TEX-N-29"}})]),s("g",{attrs:{"data-mml-node":"mspace",transform:"translate(4405,0)"}}),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(5238.7,0)"}},[s("use",{attrs:{"data-c":"6D","xlink:href":"#MJX-5-TEX-N-6D"}}),s("use",{attrs:{"data-c":"6F","xlink:href":"#MJX-5-TEX-N-6F",transform:"translate(833,0)"}}),s("use",{attrs:{"data-c":"64","xlink:href":"#MJX-5-TEX-N-64",transform:"translate(1333,0)"}})]),s("g",{attrs:{"data-mml-node":"mstyle",transform:"translate(7127.7,0)"}},[s("g",{attrs:{"data-mml-node":"mspace"}})]),s("g",{attrs:{"data-mml-node":"mstyle",transform:"translate(7294.7,0)"}},[s("g",{attrs:{"data-mml-node":"mspace"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(7628.3,0)"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-5-TEX-I-1D445"}})])])])])]),t._v("） 。这倾向于一个非常公平的划分。然鹅在某些情况下，使用某些其他的函数划分数据是非常有用的。例如，有时输出key是URL，我们希望某个主机的所有相关记录都在一个输出文件上。为了支持这种情况，用户可以提供一个特殊的划分函数，比如使用"),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"34.304ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 15162.3 1000","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[s("defs",[s("path",{attrs:{id:"MJX-15-TEX-I-210E",d:"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"}}),s("path",{attrs:{id:"MJX-15-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D43B",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D45C",d:"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D45A",d:"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D462",d:"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D459",d:"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D466",d:"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"}}),s("path",{attrs:{id:"MJX-15-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}}),s("path",{attrs:{id:"MJX-15-TEX-N-6D",d:"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"}}),s("path",{attrs:{id:"MJX-15-TEX-N-6F",d:"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"}}),s("path",{attrs:{id:"MJX-15-TEX-N-64",d:"M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z"}}),s("path",{attrs:{id:"MJX-15-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}})]),s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("use",{attrs:{"data-c":"210E","xlink:href":"#MJX-15-TEX-I-210E"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(576,0)"}},[s("use",{attrs:{"data-c":"1D44E","xlink:href":"#MJX-15-TEX-I-1D44E"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(1105,0)"}},[s("use",{attrs:{"data-c":"1D460","xlink:href":"#MJX-15-TEX-I-1D460"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(1574,0)"}},[s("use",{attrs:{"data-c":"210E","xlink:href":"#MJX-15-TEX-I-210E"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(2150,0)"}},[s("use",{attrs:{"data-c":"28","xlink:href":"#MJX-15-TEX-N-28"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(2539,0)"}},[s("use",{attrs:{"data-c":"1D43B","xlink:href":"#MJX-15-TEX-I-1D43B"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(3427,0)"}},[s("use",{attrs:{"data-c":"1D45C","xlink:href":"#MJX-15-TEX-I-1D45C"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(3912,0)"}},[s("use",{attrs:{"data-c":"1D460","xlink:href":"#MJX-15-TEX-I-1D460"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(4381,0)"}},[s("use",{attrs:{"data-c":"1D461","xlink:href":"#MJX-15-TEX-I-1D461"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(4742,0)"}},[s("use",{attrs:{"data-c":"1D45B","xlink:href":"#MJX-15-TEX-I-1D45B"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(5342,0)"}},[s("use",{attrs:{"data-c":"1D44E","xlink:href":"#MJX-15-TEX-I-1D44E"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(5871,0)"}},[s("use",{attrs:{"data-c":"1D45A","xlink:href":"#MJX-15-TEX-I-1D45A"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(6749,0)"}},[s("use",{attrs:{"data-c":"1D452","xlink:href":"#MJX-15-TEX-I-1D452"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(7215,0)"}},[s("use",{attrs:{"data-c":"28","xlink:href":"#MJX-15-TEX-N-28"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(7604,0)"}},[s("use",{attrs:{"data-c":"1D462","xlink:href":"#MJX-15-TEX-I-1D462"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(8176,0)"}},[s("use",{attrs:{"data-c":"1D45F","xlink:href":"#MJX-15-TEX-I-1D45F"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(8627,0)"}},[s("use",{attrs:{"data-c":"1D459","xlink:href":"#MJX-15-TEX-I-1D459"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(8925,0)"}},[s("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-15-TEX-I-1D458"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(9446,0)"}},[s("use",{attrs:{"data-c":"1D452","xlink:href":"#MJX-15-TEX-I-1D452"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(9912,0)"}},[s("use",{attrs:{"data-c":"1D466","xlink:href":"#MJX-15-TEX-I-1D466"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(10402,0)"}},[s("use",{attrs:{"data-c":"29","xlink:href":"#MJX-15-TEX-N-29"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(10791,0)"}},[s("use",{attrs:{"data-c":"29","xlink:href":"#MJX-15-TEX-N-29"}})]),s("g",{attrs:{"data-mml-node":"mspace",transform:"translate(11180,0)"}}),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(12013.7,0)"}},[s("use",{attrs:{"data-c":"6D","xlink:href":"#MJX-15-TEX-N-6D"}}),s("use",{attrs:{"data-c":"6F","xlink:href":"#MJX-15-TEX-N-6F",transform:"translate(833,0)"}}),s("use",{attrs:{"data-c":"64","xlink:href":"#MJX-15-TEX-N-64",transform:"translate(1333,0)"}})]),s("g",{attrs:{"data-mml-node":"mstyle",transform:"translate(13902.7,0)"}},[s("g",{attrs:{"data-mml-node":"mspace"}})]),s("g",{attrs:{"data-mml-node":"mstyle",transform:"translate(14069.7,0)"}},[s("g",{attrs:{"data-mml-node":"mspace"}})]),s("g",{attrs:{"data-mml-node":"mi",transform:"translate(14403.3,0)"}},[s("use",{attrs:{"data-c":"1D445","xlink:href":"#MJX-15-TEX-I-1D445"}})])])])])]),t._v("作为划分函数，这样可以使得同一个主机的所有URL都在同一个输出文件中。")],1),t._v(" "),s("h3",{attrs:{id:"_4-2-ordering-guarantees"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-ordering-guarantees"}},[t._v("#")]),t._v(" 4.2 Ordering Guarantees")]),t._v(" "),s("p",[t._v("我们保证对于一个给定的划分，中间键值对会按照key递增的顺序进行处理。这样的顺序保证可以使得很容易生成一个排好序的输出文件，这对输出文件支持按照key随机访问时很有效的，或者是输出文件是排序好的对用户很方便。")]),t._v(" "),s("h3",{attrs:{id:"_4-3-combiner-function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-combiner-function"}},[t._v("#")]),t._v(" 4.3 Combiner Function")]),t._v(" "),s("p",[t._v("在某些情况下，每个map任务产生的中间key会有大量重复，用户指定的reduce函数是可交换的和关联的。一个很好的例子是2.1节中的单词计数例子。单词频率一般遵循齐夫(Zipf)分布，每一个map任务会产生大量的"),s("code",[t._v("<the,1>")]),t._v("记录。所有的这些记录会通过网络发送到一个reduce函数中，然后由reduce函数加到一起产生一个数字。我们允许用户指定一个Combiner函数，在网络发送前对数据进行分区合并。")]),t._v(" "),s("p",[t._v("Combiner函数会在每个运行map任务的机器上执行。通常，combiner和reduce函数的实现代码是相同的。reduce函数和combiner函数的唯一区别是，MapReduce库是如何处理函数输出的。combiner函数的输出会被写入到一个中间文件中，然后被发送给一个reduce任务。")]),t._v(" "),s("p",[t._v("分区合并对特定MapReduce操作的加速是很明显的。附录A包含一个使用combiner的例子。")]),t._v(" "),s("h3",{attrs:{id:"_4-4-input-and-output-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-input-and-output-types"}},[t._v("#")]),t._v(" 4.4 Input and Output Types")]),t._v(" "),s("p",[t._v("MapReduce库支持读取多种格式的输入数据。例如，text格式的输入会将每一行作为一个键值对，key是文件中的偏移值，value是每一行的内容。另一个比较常见支持的格式是按照key排序好的键值对序列。每一个输入类型的实现知道如何划分输入为有意义的range，以便map任务进行处理。用户可以通过提供一个简单的reader接口的实现来添加对一个新的输入类型的支持。")]),t._v(" "),s("p",[t._v("一个reader不一定从文件中读取内容。例如，定义一个从数据库读取记录或者从内存中读取数据结构映射是非常简单的。")]),t._v(" "),s("p",[t._v("同样的方式，我们支持一系列输出类型。添加新的输出类型是很简单的。")]),t._v(" "),s("h3",{attrs:{id:"_4-5-side-effects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-side-effects"}},[t._v("#")]),t._v(" 4.5 Side-effects")]),t._v(" "),s("p",[t._v("在某些情况下，MapReduce的用户会发现将它们的map或者reduce操作生成辅助文件作为额外输出很方便。我们依赖于应用的writer来保证这些side-effect的原子性和幂等性。通常，应用会先写入到一个临时文件中，然后等它全部完成再原子性的重命名文件。")]),t._v(" "),s("p",[t._v("对于一个任务产生的多个输出文件，我们没有提供原子性的两阶段提交。因此，输出多个文件的任务的跨文件一致性需要是确定性的。这种限制在实践中从来不是问题")]),t._v(" "),s("h3",{attrs:{id:"_4-6-skipping-bad-records"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-skipping-bad-records"}},[t._v("#")]),t._v(" 4.6 Skipping Bad Records")]),t._v(" "),s("p",[t._v("有些时候因为用户代码里的bug导致map或者reduce函数在某个记录上崩溃。这样的bug会阻止MapReduce任务完成。通常的做法是修复这个bug，但是有时无法修复，这个bug可能在第三方库你无法更改源代码。另外，有时你需要忽略某些记录，例如在在某个大数据集上进行静态分析。我们提供了一个可选的运行方式，让MapReduce库发现哪些记录会导致崩溃，然后跳过这些记录，继续进行。")]),t._v(" "),s("p",[t._v("每一个worker进行会有一个信号handle来捕获段错误和总线错误。在调用一个用户的Map和reduce操作之前，MapReduce库将参数的序列号存储到全局变量里。如果用户代码产生一个信号，信号handler发送一个“last gasp” UDP  包，包含序列号，到MapReducemaster上当master发现在某一个记录上有多次失败，这表明在下一次重新执行时应该跳过这条记录。")]),t._v(" "),s("h3",{attrs:{id:"_4-7-local-execution"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-local-execution"}},[t._v("#")]),t._v(" 4.7 Local Execution")]),t._v(" "),s("p",[t._v("map、reduce函数的debug问题很棘手。因为实际的计算是在一个分布式系统上，通常会有几千台机器，有master动态地分配任务。为了方便debug和小规模测试，我们专门做了一个实现，可以在本地机器上执行MapReduce操作。用户提供控制，这样计算可以限制到某一特定的map任务上。用户通过一个特殊的标志位调用他们的程序，然后简单地使用任何他们使用的debug或者测试工具。")]),t._v(" "),s("h3",{attrs:{id:"_4-8-status-information"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-status-information"}},[t._v("#")]),t._v(" 4.8 Status Information")]),t._v(" "),s("p",[t._v("master运行一个内部HTTP服务器，并导出一组状态页供人类使用。状态页显示计算进度,像多少个任务已经完成,多少个还在运行,输入的字节数,中间数据字节数,输出字节数,处理百分比,等等.这个页也包含到标准错误的链接,和由每个任务产生的标准输出的链接.用户可以根据这些数据预测计算需要花费的时间,和是否需要更多的资源.当计算比预期的要慢很多的时候,这些页面也可以被用来判断是不是这样.")]),t._v(" "),s("p",[t._v("此外,最上面的状态页显示已经有多少个worker失败了,和当它们失败的时候,那个map和reduce任务正在运行.当试图诊断在用户代码里的bug时,这个信息也是有用的.")]),t._v(" "),s("h3",{attrs:{id:"_4-9-counters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-counters"}},[t._v("#")]),t._v(" 4.9 Counters")]),t._v(" "),s("p",[t._v("MapReduce库提供一个计数器来计算各种时间的发生次数。例如，用户想要统计所有单词处理的次数或者德语文档被索引的次数。")]),t._v(" "),s("p",[t._v("为了使用这个功能，用户需要创建一个命名计数器对象，然后在map或者reduce函数里适当的增加技术，例如：")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("Counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" uppercase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nuppercase "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetCounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uppercase"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" String contents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each word w in contents"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("IsCapitalized")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t\tuppercase"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Increment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("EmitIntermediate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("每台worker机器上的计数值都会周期性地发送到master上（依附在ping回应上）。master从成功的map和reduce任务里统计计数值，然后当MapReduce任务完成时返回给用户代码。当前计数值也会在master的状态页上展示，这样人类可以观察计算过程。当统计计数值的时候，master会同一个map/reduce任务多次执行的影响，避免重复计数。")]),t._v(" "),s("p",[t._v("部分计数值会被MapReduce库自动维护，比如输入输出的键值对数")]),t._v(" "),s("p",[t._v("用户会发现，对MapReduce操作的合理性检查(sanity checking)是很有用的。例如，在某些MapReduce操作中，用户代码可能想要保证输出的键值对数等于输入的键值对数，或者是处理的德语文档在一个合理 的比例之内。")]),t._v(" "),s("h2",{attrs:{id:"_5-性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-性能"}},[t._v("#")]),t._v(" 5 性能")]),t._v(" "),s("p",[t._v("两个实例的benchmark，略")]),t._v(" "),s("h2",{attrs:{id:"_6-经验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-经验"}},[t._v("#")]),t._v(" 6 经验")]),t._v(" "),s("p",[t._v("吹了一点MapReduce的用途和性能，略")]),t._v(" "),s("h2",{attrs:{id:"_7-相关工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-相关工作"}},[t._v("#")]),t._v(" 7 相关工作")]),t._v(" "),s("p",[t._v("略")]),t._v(" "),s("h2",{attrs:{id:"a-单词频率统计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-单词频率统计"}},[t._v("#")]),t._v(" A 单词频率统计")]),t._v(" "),s("p",[t._v("本节包含了一个完整的程序,用于统计在一组命令行指定的输入文件中,每一个不同的单词出现频率.")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mapreduce/mapreduce.h"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// User’s map function")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WordCounter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mapper")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" MapInput"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跳过开始时的空白")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isspace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查找单词结尾")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isspace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("REGISTER_MAPPER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("WordCounter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// User’s reduce function")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Adder")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Reducer")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ReduceInput"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历所有相同key的条目，然后把值加到一起")]),t._v("\n\t\tint64 value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("input"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("done")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tvalue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StringToInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tinput"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NextValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Emit sum for input->key()")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("IntToString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("REGISTER_REDUCER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Adder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ParseCommandLineFlags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tMapReduceSpecification spec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 将输入文件列表存储到 "spec"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tMapReduceInput"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" input "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" spec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tinput"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tinput"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_filepattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tinput"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_mapper_class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"WordCounter"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定输出文件:")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /gfs/test/freq-00000-of-00100")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /gfs/test/freq-00001-of-00100")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\tMapReduceOutput"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" out "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" spec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_filebase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/gfs/test/freq"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_num_tasks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_reducer_class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Adder"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选项：局部求和节省带宽")]),t._v("\n\tout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_combiner_class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Adder"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Tuning parameters: use at most 2000")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// machines and 100 MB of memory per task")]),t._v("\n\tspec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_machines")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tspec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_map_megabytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tspec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_reduce_megabytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Now run it")]),t._v("\n\tMapReduceResult result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MapReduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("spec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("abort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Done: ’result’ structure contains info")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// about counters, time taken, number of")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// machines used, etc.")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br"),s("span",{staticClass:"line-number"},[t._v("67")]),s("br"),s("span",{staticClass:"line-number"},[t._v("68")]),s("br"),s("span",{staticClass:"line-number"},[t._v("69")]),s("br"),s("span",{staticClass:"line-number"},[t._v("70")]),s("br"),s("span",{staticClass:"line-number"},[t._v("71")]),s("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);