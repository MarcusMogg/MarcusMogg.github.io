(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{541:function(a,s,e){"use strict";e.r(s);var t=e(6),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"编译和链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译和链接"}},[a._v("#")]),a._v(" 编译和链接")]),a._v(" "),e("p",[a._v("源文件首先会生成中间目标文件（编译），再由中间目标文件生成执行文件  （链接）")]),a._v(" "),e("p",[a._v("在编译时，编译器只检测程序语法和函数、变量是否被声明。如果函数未被声明，编译器会给出一个警告，但可以生成 Object File（Linux是.o文件 windows下是obj 文件）")]),a._v(" "),e("p",[a._v("在链接时，链接器会在所有的 Object File 中找寻函数的实现，如果找不到，那到就会报链接错误码（Linker Error），在 VC 下，这种错误一般是： Link 2001 错误，意思说是说，链接器未能找到函数的实现，你需要指定函数的 Object File")]),a._v(" "),e("p",[a._v("makefile  的目的就是告诉 make 命令如何编译和链接程序")]),a._v(" "),e("h2",{attrs:{id:"makefile的基本规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#makefile的基本规则"}},[a._v("#")]),a._v(" Makefile的基本规则")]),a._v(" "),e("h3",{attrs:{id:"基本格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本格式"}},[a._v("#")]),a._v(" 基本格式")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("target "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" prerequisites "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v("\n\t"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#xxxx")]),a._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". \n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("上面表示一组命令")]),a._v(" "),e("p",[a._v("target  表示这组命令的目标，可以是一个 object file（目标文件），也可以是一个执行文件，还可以是一个标签（label）")]),a._v(" "),e("p",[a._v("prerequisites 生成该 target 所依赖的文件和/或 target。如果其中的某个文件要比目标文件要新，那么，目标就被认为是“过时的”，被认为是需要重生成的。")]),a._v(" "),e("p",[a._v("command 该 target 要执行的命令（任意的 shell 命令）  如果其不与“target:prerequisites”在一行，那么，必须以 Tab 键开头，如果和 prerequisites 在一行，那么可以用分号做为分隔。")]),a._v(" "),e("p",[a._v("# 注释")]),a._v(" "),e("h3",{attrs:{id:"使用变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用变量"}},[a._v("#")]),a._v(" 使用变量")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("edit "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" main.o kbd.o command.o display.o "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        insert.o search.o files.o utils.o\n    cc -o edit main.o kbd.o command.o display.o "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t\tinsert.o search.o files.o utils.o\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("有重复部分，可以使用变量简化")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("objects "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" main.o kbd.o command.o display.o "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\tinsert.o search.o files.o utils.o\nedit "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("objects"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n    cc -o edit "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("objects"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("h3",{attrs:{id:"清空目标文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#清空目标文件"}},[a._v("#")]),a._v(" 清空目标文件")]),a._v(" "),e("p",[a._v("一般做法（一般放在文件末尾）")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v(".PHONY "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" clean\nclean "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("\n\t-rm edit "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("objects"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v(".PHONY 表示clean是一个伪目标(不代表一个真正的文件名)")]),a._v(" "),e("p",[a._v("rm 命令前面加了一个减号的意思是，如果某些文件出现问题，不要管，继续做后面的事。")]),a._v(" "),e("p",[a._v("shell里调用"),e("code",[a._v("make clean")]),a._v("可以执行")]),a._v(" "),e("h3",{attrs:{id:"引用其它的-makefile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引用其它的-makefile"}},[a._v("#")]),a._v(" 引用其它的 Makefile")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("include "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("filename 可以是当前操作系统 Shell 的文件模式（可以包含路径和通配符)")]),a._v(" "),e("p",[a._v("如果文件都没有指定绝对路径或是相对路径的话， make 会在当前目录下首先寻找，如果当前目录下没有找到，那么， make 还会在下面的几个目录下找：")]),a._v(" "),e("ol",[e("li",[a._v("如果 make 执行时，有 -I 或 --include-dir 参数，那么 make 就会在这个参数所指定的目录下去寻找。")]),a._v(" "),e("li",[a._v("如果目录 "),e("code",[a._v("prefix/include")]),a._v(" （一般是： /usr/local/bin 或 /usr/include ）存在的话， make 也会去找。")])]),a._v(" "),e("h3",{attrs:{id:"make工作方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#make工作方式"}},[a._v("#")]),a._v(" make工作方式")]),a._v(" "),e("ol",[e("li",[a._v("读入所有的 Makefile。")]),a._v(" "),e("li",[a._v("读入被 include 的其它 Makefile。")]),a._v(" "),e("li",[a._v("初始化文件中的变量。")]),a._v(" "),e("li",[a._v("推导隐晦规则，并分析所有规则。")]),a._v(" "),e("li",[a._v("为所有的目标文件创建依赖关系链。")]),a._v(" "),e("li",[a._v("根据依赖关系，决定哪些目标要重新生成。")]),a._v(" "),e("li",[a._v("执行生成命令。")])]),a._v(" "),e("h3",{attrs:{id:"示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[a._v("#")]),a._v(" 示例")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("objects "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" main.o kbd.o command.o display.o "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\tinsert.o search.o files.o utils.o\nedit "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("objects"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n    cc -o edit "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("objects"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\nmain.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" main.c defs.h\n\tcc -c main.c\nkbd.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" kbd.c defs.h command.h\n\tcc -c kbd.c\ncommand.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" command.c defs.h command.h\n\tcc -c command.c\ndisplay.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" display.c defs.h buffer.h\n\tcc -c display.c\ninsert.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" insert.c defs.h buffer.h\n\tcc -c insert.c\nsearch.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" search.c defs.h buffer.h\n\tcc -c search.c\nfiles.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" files.c defs.h buffer.h command.h\n\tcc -c files.c\nutils.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" utils.c defs.h\n\tcc -c utils.c\n\t\n.PHONY "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" clean\nclean "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("\n\t-rm edit "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("objects"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br")])]),e("ol",[e("li",[a._v("make 会在当前目录下找名字叫“Makefile”或“makefile”的文件")]),a._v(" "),e("li",[a._v("如果找到，它会找文件中的第一个目标文件（target），在上面的例子中，他会找到“edit”这个文件，并把这个文件作为最终的目标文件")]),a._v(" "),e("li",[a._v("如果 edit 文件不存在，或是 edit 所依赖的后面的 .o 文件的文件修改时间要比 edit 这个文件新，那么，他就会执行后面所定义的命令来生成 edit 这个文件")]),a._v(" "),e("li",[a._v("如果 edit 所依赖的 .o 文件也不存在，那么 make 会在当前文件中找目标为 .o 文件的依赖性，如果找到则再根据那一个规则生成 .o 文件")]),a._v(" "),e("li",[a._v("当然，你的 C 文件和 H 文件是存在的啦，于是 make 会生成 .o 文件，然后再用 .o 文件生成 make的终极任务，也就是执行文件 edit 了")])]),a._v(" "),e("p",[a._v("如果被依赖的文件找不到 ，或者前面没有"),e("code",[a._v("-")]),a._v("的命令执行出错，make会直接退出并报错")]),a._v(" "),e("h2",{attrs:{id:"命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[a._v("#")]),a._v(" 命令")]),a._v(" "),e("h3",{attrs:{id:"显示命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#显示命令"}},[a._v("#")]),a._v(" 显示命令")]),a._v(" "),e("p",[a._v("make 会把其要执行的命令行在命令执行前输出到屏幕上。当我们用 @ 字符在命令行前，那么，这个命令将不被 make 显示出来")]),a._v(" "),e("p",[a._v("例子：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("@echo 正在编译 XXX 模块......\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("输出")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("正在编译 XXX 模块......\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("而")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("echo 正在编译 XXX 模块......\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("输出")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("echo 正在编译 XXX 模块......\n正在编译 XXX 模块......\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("make 参数 -n 或 --just-print ，那么其只是显示命令，但不会执行命令，这个功能有利于我们调试我们的 Makefile，看看我们书写的命令是执行起来是什么样子的或是什么顺序的")]),a._v(" "),e("h3",{attrs:{id:"命令包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#命令包"}},[a._v("#")]),a._v(" 命令包")]),a._v(" "),e("p",[a._v("类似于函数,以 define 开始，以 endef 结束，如：")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("define run-yacc\nyacc "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("firstword $^"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" y.tab.c "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$@")]),a._v("\nendef\n\n\nfoo.c "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" foo.y\n\t"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("run-yacc"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br")])]),e("h2",{attrs:{id:"变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),e("p",[a._v("在 Makefile 中的定义的变量，就像是 C/C++ 语言中的宏一样，代表一个文本字串，在 Makefile中执行的时候其会自动原模原样地展开在所使用的地方。其与 C/C++ 所不同的是，你可以在 Makefile中改变其值")]),a._v(" "),e("h3",{attrs:{id:"基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[a._v("#")]),a._v(" 基础")]),a._v(" "),e("p",[a._v("变量在声明时需要给予初值")]),a._v(" "),e("p",[a._v("变量会在使用它的地方原样展开，就像 C/C++ 中的宏一样，例如：")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("foo "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" c\nprog.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" prog."),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("foo"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\t"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("foo"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("foo"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" -"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("foo"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" prog."),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("foo"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("展开后得到")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("prog.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" prog.c\n\tcc -c prog.c\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[e("code",[a._v(":=")]),a._v(" 是覆盖之前的值")]),a._v(" "),e("p",[a._v("变量的声明可以嵌套")]),a._v(" "),e("p",[e("code",[a._v("例子")]),a._v("，空格的定义")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("nullstring :"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\nspace :"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("nullstring"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# end of the line")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("nullstring表示空值，而space表示空格。如果变量声明后面跟着注释的话，会截取到#前面")]),a._v(" "),e("p",[a._v("比如下面这个dir 这个变量的值是“/foo/bar”，后面还跟了 4 个空格")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("dir")]),a._v(" :"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" /foo/bar "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# directory to put the frobs in")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[e("code",[a._v("?= 例子")])]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("FOO ?"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" bar\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("含义是，如果 FOO 没有被定义过，那么变量 FOO 的值就是“bar”，如果 FOO 先前被定义过，那么这条语将什么也不做")]),a._v(" "),e("h4",{attrs:{id:"追加变量值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#追加变量值"}},[a._v("#")]),a._v(" 追加变量值")]),a._v(" "),e("p",[e("code",[a._v("+=")]),a._v(" 符号")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("objects "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" main.o foo.o bar.o utils.o\nobjects "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" another.o\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h3",{attrs:{id:"高级用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高级用法"}},[a._v("#")]),a._v(" 高级用法")]),a._v(" "),e("h4",{attrs:{id:"变量值的替换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量值的替换"}},[a._v("#")]),a._v(" 变量值的替换")]),a._v(" "),e("p",[e("code",[a._v("$(var:a=b) 或 ${var:a=b}")]),a._v(" ， 把变量var中所有以a作为结尾（后面跟着空格或者结束）的a替换为b")]),a._v(" "),e("h4",{attrs:{id:"把变量的值再当成变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把变量的值再当成变量"}},[a._v("#")]),a._v(" 把变量的值再当成变量")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("x = y\ny = z\na := $($(x))\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[e("code",[a._v("$(x)")]),a._v(" 的值是“y”，所以 "),e("code",[a._v("$($(x))")]),a._v(" 就是 "),e("code",[a._v("$(y)")]),a._v("，于是 "),e("code",[a._v("$(a)")]),a._v("的值就是“z”")]),a._v(" "),e("h4",{attrs:{id:"override-指示符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#override-指示符"}},[a._v("#")]),a._v(" override 指示符")]),a._v(" "),e("p",[a._v("如果有变量是通常 make 的命令行参数设置的，那么 Makefile 中对这个变量的赋值会被忽略。如果想在 Makefile 中设置这类参数的值，那么可以使用“override”指示符。")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("override CFLAGS "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" -g\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h4",{attrs:{id:"多行变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多行变量"}},[a._v("#")]),a._v(" 多行变量")]),a._v(" "),e("p",[a._v("使用 define 关键字设置变量的值可以有换行，这有利于定义一系列的命令（前面我们讲过“命令包”的技术就是利用这个关键字）。\ndefine 指示符后面跟的是变量的名字，而重起一行定义变量的值，定义是以 endef 关键字结束。其工作方式和“=”操作符一样。变量的值可以包含函数、命令、文字，或是其它变量。因为命令需要以 [Tab]键开头，所以如果你用 define 定义的命令变量中没有以 Tab 键开头，那么 make 就不会把其认为是命令。")]),a._v(" "),e("h4",{attrs:{id:"目标变量-局部变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目标变量-局部变量"}},[a._v("#")]),a._v(" 目标变量（局部变量）")]),a._v(" "),e("p",[a._v("作用范围只在对应的目标范围以及连带的目标范围中")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("prog "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" CFLAGS "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" -g "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只在下面的语句里起效")]),a._v("\nprog "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" prog.o foo.o bar.o\n\t"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CC"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CFLAGS"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" prog.o foo.o bar.o\nprog.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" prog.c\n\t"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CC"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CFLAGS"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" prog.c\nfoo.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" foo.c\n\t"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CC"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CFLAGS"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" foo.c\nbar.o "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" bar.c\n\t"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CC"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CFLAGS"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" bar.c\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br")])]),e("h2",{attrs:{id:"条件判断"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#条件判断"}},[a._v("#")]),a._v(" 条件判断")]),a._v(" "),e("p",[a._v("语法")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<conditional-directive>\n<text>\nelse\n<text>\nendif\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[e("code",[a._v("conditional-directive")]),a._v(" 可以是")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ifeq (<arg1>, <arg2>)\nifeq '<arg1>' '<arg2>'\nifeq \"<arg1>\" \"<arg2>\"\nifeq \"<arg1>\" '<arg2>'\nifeq '<arg1>' \"<arg2>\"\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[a._v("比较arg1和arg2是否相同")]),a._v(" "),e("p",[e("code",[a._v("ifneq")]),a._v("比较的是不同")]),a._v(" "),e("p",[e("code",[a._v("ifdef")]),a._v(" 当变量不为空的时候为真")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ifdef <variable-name>\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[e("code",[a._v("ifndef")]),a._v("相反")]),a._v(" "),e("p",[a._v("make 是在读取 Makefile 时就计算条件表达式的值，并根据条件表达式的值来选择语句，所以，最好不要把自动化变量（如 $@ 等）放入条件表达式中，因为自动化变量是在运行时才有的")]),a._v(" "),e("h2",{attrs:{id:"函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[a._v("#")]),a._v(" 函数")]),a._v(" "),e("p",[a._v("函数调用和变量类似，语法为")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$(<function> <arguments>)\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("或者")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("${<function> <arguments>}\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"字符串处理函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串处理函数"}},[a._v("#")]),a._v(" 字符串处理函数")]),a._v(" "),e("h4",{attrs:{id:"subst"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#subst"}},[a._v("#")]),a._v(" subst")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("subst "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("from"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(","),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("to"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(","),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[e("p",[a._v("功能：把字串 "),e("code",[a._v("string")]),a._v(" 中的 "),e("code",[a._v("from")]),a._v(" 字符串替换成 "),e("code",[a._v("to")]),a._v("。")])]),a._v(" "),e("li",[e("p",[a._v("返回：函数返回被替换过后的字符串。")])]),a._v(" "),e("li",[e("p",[a._v("示例：")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("subst ee,EE,feet on the stree t"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("把 feet on the str eet 中的 ee 替换成 EE ，返回结果是 fEEt on the strEEt")])])]),a._v(" "),e("h4",{attrs:{id:"patsubst"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#patsubst"}},[a._v("#")]),a._v(" patsubst")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("patsubst "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("pattern"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(","),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("replacement"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(","),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[e("p",[a._v("功能：把 "),e("code",[a._v("string")]),a._v("中的符合 "),e("code",[a._v("pattern")]),a._v("的 字符串替换成 "),e("code",[a._v("replacement")]),a._v("。")])]),a._v(" "),e("li",[e("p",[a._v("返回：函数返回被替换过后的字符串。")])]),a._v(" "),e("li",[e("p",[a._v("示例：")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("patsubst %.c,%.o,x.c.c bar.c"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("字串 x.c.c bar.c 符合模式 %.c 的单词替换成 %.o ，返回结果是 x.c.o bar.o")])])]),a._v(" "),e("h4",{attrs:{id:"strip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#strip"}},[a._v("#")]),a._v(" strip")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("strip "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[e("p",[a._v("功能：删除字符串 "),e("code",[a._v("string")]),a._v(" 首尾的空格。")])]),a._v(" "),e("li",[e("p",[a._v("返回：函数返回被替换过后的字符串。")])]),a._v(" "),e("li",[e("p",[a._v("示例：")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("strip a b c "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("把a b c首尾的空格删除 ，返回"),e("code",[a._v("a b c")])])])]),a._v(" "),e("h4",{attrs:{id:"findstring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findstring"}},[a._v("#")]),a._v(" findstring")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("findstring "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("find"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(","),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[e("p",[a._v("功能：在字符串 "),e("code",[a._v("string")]),a._v(" 中查找 "),e("code",[a._v("find")]),a._v(" 字串  。")])]),a._v(" "),e("li",[e("p",[a._v("返回：如果找到，那么返回 "),e("code",[a._v("find")]),a._v(" ，否则返回空字符串  。")])]),a._v(" "),e("li",[e("p",[a._v("示例：")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("findstring a,a b c"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("findstring a,b c"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("第一个函数返回 a 字符串，第二个返回空字符串")])])]),a._v(" "),e("h4",{attrs:{id:"filter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[a._v("#")]),a._v(" filter")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("filter "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("pattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(","),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[e("p",[a._v("功能：以 "),e("code",[a._v("pattern")]),a._v(" 模式过滤 "),e("code",[a._v("string")]),a._v(" 字符串中的单词，保留符合模式 "),e("code",[a._v("pattern")]),a._v(" 的单词。可以\n有多个模式。")])]),a._v(" "),e("li",[e("p",[a._v("返回：返回符合模式 "),e("code",[a._v("pattern")]),a._v(" 的字串    。")])]),a._v(" "),e("li",[e("p",[a._v("示例：")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("sources :"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" foo.c bar.c baz.s ugh.h\nfoo: "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("sources"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\tcc "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("filter %.c %.s,"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("$(")]),a._v("sources"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" -o foo\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[e("code",[a._v("$(filter %.c %.s,$(sources))")]),a._v("返回的值是 "),e("code",[a._v("foo.c bar.c baz.s")]),a._v(" 。")])])]),a._v(" "),e("h4",{attrs:{id:"filter-out"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filter-out"}},[a._v("#")]),a._v(" filter-out")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("filter-out  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("pattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(","),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[e("p",[a._v("功能：和fillter相反")])]),a._v(" "),e("li",[e("p",[a._v("返回：返回不符合模式 "),e("code",[a._v("pattern")]),a._v(" 的字串    。")])]),a._v(" "),e("li",[e("p",[a._v("示例：")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("objects")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("main1.o foo.o main2.o bar.o\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("mains")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("main1.o main2.o\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[e("code",[a._v("$(filter-out $(mains),$(objects))")]),a._v("返回的值是 "),e("code",[a._v("foo.o bar.o")]),a._v(" 。")])])]),a._v(" "),e("h4",{attrs:{id:"sort"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[a._v("#")]),a._v(" sort")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[e("p",[a._v("功能：将"),e("code",[a._v("list")]),a._v("中的字符串排序")])]),a._v(" "),e("li",[e("p",[a._v("返回：返回排序好的字符串    。")])]),a._v(" "),e("li",[e("p",[a._v("示例：")]),a._v(" "),e("p",[e("code",[a._v("$(sort foo bar lose)")]),a._v("返回的值是 "),e("code",[a._v("bar foo lose")]),a._v(" 。")]),a._v(" "),e("p",[a._v("sort 函数会去掉 "),e("code",[a._v("list")]),a._v(" 中相同的单词")])])]),a._v(" "),e("h4",{attrs:{id:"word"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#word"}},[a._v("#")]),a._v(" word")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("word "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("n"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(", "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("返回：返回"),e("code",[a._v("list")]),a._v("中的第n个字符串    。")])]),a._v(" "),e("h4",{attrs:{id:"wordlist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wordlist"}},[a._v("#")]),a._v(" wordlist")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("wordlist "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("begin"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(","),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("end"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(","),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("返回：返回"),e("code",[a._v("list")]),a._v("中的"),e("code",[a._v("[begin,end]")]),a._v("中的字符串  (从1 开始计)。")])]),a._v(" "),e("h4",{attrs:{id:"words"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#words"}},[a._v("#")]),a._v(" words")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("words  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("返回：返回"),e("code",[a._v("list")]),a._v("中的字符串个数 。")])]),a._v(" "),e("h4",{attrs:{id:"firstword"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firstword"}},[a._v("#")]),a._v(" firstword")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("firstword  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("返回：返回"),e("code",[a._v("list")]),a._v("中的第一个字符串。")])]),a._v(" "),e("h3",{attrs:{id:"_6-2-文件名操作函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-文件名操作函数"}},[a._v("#")]),a._v(" 6.2 文件名操作函数")]),a._v(" "),e("h4",{attrs:{id:"dir"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dir"}},[a._v("#")]),a._v(" dir")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("dir")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("从"),e("code",[a._v("list")]),a._v("中取出目录部分。目录部分是指最后一个反斜杠（/ ）之前的部分。如果没有反斜杠，那么返回 ./ 。")]),a._v(" "),e("li",[a._v("示例： "),e("code",[a._v("$(dir src/foo.c hacks)")]),a._v(" 返回值是 "),e("code",[a._v("src/ ./")]),a._v(" 。")])]),a._v(" "),e("h4",{attrs:{id:"notdir"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notdir"}},[a._v("#")]),a._v(" notdir")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("notdir  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("从"),e("code",[a._v("list")]),a._v("中取出非目录部分（即文件名）。")]),a._v(" "),e("li",[a._v("示例： "),e("code",[a._v("$(notdir src/foo.c hacks)")]),a._v(" 返回值是 "),e("code",[a._v("foo.c hacks")]),a._v(" 。")])]),a._v(" "),e("h4",{attrs:{id:"suffix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#suffix"}},[a._v("#")]),a._v(" suffix")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("suffix  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("从"),e("code",[a._v("list")]),a._v("中取出文件后缀名，没有的话返回空字符串")])]),a._v(" "),e("h4",{attrs:{id:"basename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basename"}},[a._v("#")]),a._v(" basename")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("basename")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("从"),e("code",[a._v("list")]),a._v("中取出文件名，不包含后缀")])]),a._v(" "),e("h4",{attrs:{id:"addsuffix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#addsuffix"}},[a._v("#")]),a._v(" addsuffix")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("addsuffix  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("suffix"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(","),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("将"),e("code",[a._v("list")]),a._v("中的每一个字符串添加后缀")])]),a._v(" "),e("h4",{attrs:{id:"addprefix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#addprefix"}},[a._v("#")]),a._v(" addprefix")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("addsuffix  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("prefix"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(","),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("将"),e("code",[a._v("list")]),a._v("中的每一个字符串添加前缀")])]),a._v(" "),e("h4",{attrs:{id:"join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[a._v("#")]),a._v(" join")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("join")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(","),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("list2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("将"),e("code",[a._v("list1")]),a._v("和"),e("code",[a._v("list2")]),a._v("中的字符串依次拼接。")]),a._v(" "),e("li",[a._v("示例： "),e("code",[a._v("$(join aaa bbb , 111 222 333)")]),a._v(" 返回值是 "),e("code",[a._v("aaa111 bbb222 333")]),a._v(" 。")])]),a._v(" "),e("h3",{attrs:{id:"foreach-函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foreach-函数"}},[a._v("#")]),a._v(" foreach 函数")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$(foreach <var>,<list>,<text>)\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("把参数 "),e("code",[a._v("list")]),a._v(" 中的单词逐一取出放到参数 "),e("code",[a._v("var")]),a._v(" 所指定的变量中，然后再执行 "),e("code",[a._v("text")]),a._v(" 所包含的表达式。每一次"),e("code",[a._v("text")]),a._v(" 会返回一个字符串，循环过程中， "),e("code",[a._v("text")]),a._v(" 的所返回的每个字符串会以空格分隔，最后当整个循环结束时， "),e("code",[a._v("text")]),a._v(" 所返回的每个字符串所组成的整个字符串（以空格分隔）将会是 foreach 函数的返回值。")]),a._v(" "),e("p",[a._v("实例")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("names :"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" a b c d\nfiles :"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("foreach n,"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("$(")]),a._v("names"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(", "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("$(")]),a._v("n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(".o"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# files值为  a.o b.o c.o d.o")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("var的作用域仅在foreach中")]),a._v(" "),e("h3",{attrs:{id:"if函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#if函数"}},[a._v("#")]),a._v(" if函数")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$(if <condition>,<then-part>,<else-part>)\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("和c的三目运算符？ 效果一样")]),a._v(" "),e("h3",{attrs:{id:"call函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#call函数"}},[a._v("#")]),a._v(" call函数")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("$(call <expression>,<parm1>,<parm2>,...,<parmn>)\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("当 make 执行这个函数时， "),e("code",[a._v("expression")]),a._v(" 参数中的变量，如 $(1) 、 $(2) 等，会被参数 "),e("code",[a._v("parm1")]),a._v(" 、\n"),e("code",[a._v("parm2")]),a._v("依次取代。而 "),e("code",[a._v("expression")]),a._v(" 的返回值就是 call 函数的返回值。例如")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("reverse "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\nfoo "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("call reverse,a,b"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# foo的值为 b a")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h3",{attrs:{id:"shell函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shell函数"}},[a._v("#")]),a._v(" shell函数")]),a._v(" "),e("p",[a._v("shell 函数把执行操作系统命令后的输出作为函数返回")]),a._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("contents :"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("shell "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" foo"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\nfiles :"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("shell "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" *.c"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("这个函数会新生成一个 Shell 程序来执行命令，所以要注意其运行性能")]),a._v(" "),e("h2",{attrs:{id:"make"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#make"}},[a._v("#")]),a._v(" make")]),a._v(" "),e("h3",{attrs:{id:"指定makefile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定makefile"}},[a._v("#")]),a._v(" 指定Makefile")]),a._v(" "),e("p",[a._v("GNU make 找寻默认的 Makefile 的规则是在当前目录下依次找三个文件——“GNUmakefile”、“makefile”和“Makefile”")]),a._v(" "),e("p",[a._v("使用-f 或是 --file 参数  可以自己指定makefile文件")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("make –f xx.mk\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);