(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{582:function(t,e,v){t.exports=v.p+"assets/img/image-20210525222352183.c5336430.png"},617:function(t,e,v){"use strict";v.r(e);var _=v(15),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),_("p",[t._v("命令 "),_("code",[t._v("git config")])]),t._v(" "),_("p",[t._v("配置文件有三个层级,每一个级别会覆盖上一级别的配置 ：")]),t._v(" "),_("ol",[_("li",[_("code",[t._v("/etc/gitconfig")]),t._v(" 文件: 包含系统上每一个用户及他们仓库的通用配置。对应"),_("code",[t._v("--system")]),t._v(" 选项")]),t._v(" "),_("li",[_("code",[t._v("~/.gitconfig")]),t._v(" 或 "),_("code",[t._v("~/.config/git/config")]),t._v(" 文件：只针对当前用户 。对应"),_("code",[t._v("--global")]),t._v("  选项")]),t._v(" "),_("li",[t._v("当前使用仓库的 Git 目录中的 config 文件（即 "),_("code",[t._v(".git/config")]),t._v("）：针对该仓库。  对应"),_("code",[t._v("--local")]),t._v("  选项")])]),t._v(" "),_("p",[_("code",[t._v("git config <key>")]),t._v("： 来检查 Git 的某一项配置 ,加上"),_("code",[t._v("--show-origin")]),t._v("可以查看最终是哪个文件起效。")]),t._v(" "),_("h2",{attrs:{id:"初始化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),_("p",[t._v("这个没啥说的")]),t._v(" "),_("div",{staticClass:"language-sh line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-sh"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" *.c\n"),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial project version'")]),t._v("\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br")])]),_("h2",{attrs:{id:"记录更新"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#记录更新"}},[t._v("#")]),t._v(" 记录更新")]),t._v(" "),_("p",[t._v("状态转移图")]),t._v(" "),_("p",[_("img",{attrs:{src:v(582),alt:"image-20210525222352183"}})]),t._v(" "),_("p",[_("code",[t._v("git status")]),t._v(" 查看哪些文件处于什么状态。"),_("code",[t._v("--short")]),t._v("缩短输出，输出中有两栏，左栏指明了暂存区的状态，右栏指明了工作区的状态 。")]),t._v(" "),_("p",[_("code",[t._v("git add <files>")]),t._v(" 开始跟踪对应文件")]),t._v(" "),_("p",[_("code",[t._v(".gitignore")]),t._v("文件，列出要忽略的文件的模式  （glob 模式匹配  ）。"),_("a",{attrs:{href:"https://github.com/github/gitignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitignore模板"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("code",[t._v("git diff")]),t._v(" 具体了解修改了什么地方。")]),t._v(" "),_("p",[t._v("不加参数比较的是工作目录中当前文件和暂存区域快照之间的差异")]),t._v(" "),_("p",[_("code",[t._v("--staged")]),t._v("将比对已暂存文件与最后一次提交的文件差异")]),t._v(" "),_("p",[_("code",[t._v("git commit")]),t._v(" 提交")]),t._v(" "),_("p",[_("code",[t._v("git rm --cached")]),t._v(" 从暂存区删除 (cached 和staged是同义词……)")]),t._v(" "),_("h2",{attrs:{id:"查看提交历史"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#查看提交历史"}},[t._v("#")]),t._v(" 查看提交历史")]),t._v(" "),_("p",[_("code",[t._v("git log")])]),t._v(" "),_("p",[t._v("默认会按时间先后顺序列出所有的提交")]),t._v(" "),_("p",[_("code",[t._v("-p or --patch")]),t._v("显示每次提交所引入的差异")]),t._v(" "),_("p",[t._v("操作格式的还有一些，用到再说吧……")]),t._v(" "),_("h2",{attrs:{id:"撤销操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#撤销操作"}},[t._v("#")]),t._v(" 撤销操作")]),t._v(" "),_("p",[_("code",[t._v("git commit --amend")])]),t._v(" "),_("p",[t._v("使用场景：提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了")]),t._v(" "),_("div",{staticClass:"language-shell line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial commit'")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" forgotten_file\n"),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br")])]),_("p",[t._v("最终只会有一个提交——第二次提交将代替第一次提交的结果  ,第一次提交不会出现在仓库的历史上。")]),t._v(" "),_("p",[_("code",[t._v("git rm --cached")]),t._v(" 取消暂存的文件")]),t._v(" "),_("p",[_("code",[t._v("git reset HEAD <file>")]),t._v(" 也可以取消暂存的文件，本质是重置，比较危险，老版git会提示这个，新版换成上面的了")]),t._v(" "),_("p",[_("code",[t._v("git checkout -- <file>")]),t._v(" 将工作目录的文件回退到暂存区的版本")]),t._v(" "),_("p",[t._v("新版 git 使用"),_("code",[t._v("git restore <file>")]),t._v(" 替代这个命令")]),t._v(" "),_("h2",{attrs:{id:"远程仓库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[t._v("#")]),t._v(" 远程仓库")]),t._v(" "),_("p",[_("code",[t._v("git remote -v")]),t._v(" 显示  远程仓库的简写和url")]),t._v(" "),_("p",[_("code",[t._v("git remote add <shortname> <url>")]),t._v("添加一个新的远程 Git 仓库")]),t._v(" "),_("p",[_("code",[t._v("git fetch <remote>")]),t._v(" 从远程仓库中  拉取所有你还没有的数据  (pull会自动合并分支，fetch不会)")]),t._v(" "),_("p",[_("code",[t._v("git push <remote> <branch>")]),t._v(" 推送到远程仓库")]),t._v(" "),_("p",[_("code",[t._v("git remote rename")]),t._v(" 重命名简写")]),t._v(" "),_("h2",{attrs:{id:"标签"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#标签"}},[t._v("#")]),t._v(" 标签")]),t._v(" "),_("p",[_("code",[t._v("git tag")]),t._v(" 列出标签")]),t._v(" "),_("p",[_("code",[t._v('git tag -l "v1.8.5*"')]),t._v(" 列出匹配的标签")]),t._v(" "),_("p",[t._v("Git 支持两种标签：轻量标签（lightweight）与附注标签（annotated）")]),t._v(" "),_("p",[t._v("轻量标签很像一个不会改变的分支——它只是某个特定提交的引用")]),t._v(" "),_("p",[_("code",[t._v("git tag v1.4-lw")]),t._v(" 即可")]),t._v(" "),_("p",[t._v("附注标签是存储在 Git 数据库中的一个完整对象")]),t._v(" "),_("p",[_("code",[t._v('git tag -a v1.4 -m "my version 1.4')])]),t._v(" "),_("p",[_("code",[t._v("git tag -a v1.2 9fceb02")]),t._v("对过去的提交打标签")]),t._v(" "),_("p",[_("code",[t._v("git push origin <tagname>")]),t._v(" 推送标签到远程仓库")]),t._v(" "),_("p",[_("code",[t._v("git tag -d <tagname>")]),t._v(" 删除本地标签")]),t._v(" "),_("p",[_("code",[t._v("git push origin --delete <tagname>")]),t._v(" 删除远程标签")])])}),[],!1,null,null,null);e.default=a.exports}}]);